## CombFoldinator
## 
## Snakemake pipeline to fold protein sequences into pdb files
## 
## Rules:


# What json files are there to process in our pipeline?
INPUTS=[name.replace('.json', '') for name in os.listdir("data/") if name.endswith('json')]

rule all:
  input:
    # The to be processed input files
    expand("results/data/{protein_complex}/{protein_complex}.json",
        protein_complex=INPUTS),
    "results/checkpoints/setup_combfold",
    expand("results/data/{protein_complex}/subunits/pdb",
        protein_complex=INPUTS),
    expand("results/data/{protein_complex}/subunits/combfold",
        protein_complex=INPUTS)


## preprocess:                Preprocess the input JSON files.
rule preprocess:
  """When the sequences are too long to predict, cut them

  Note not yet implemented yet
  """
  input:
    "data/{protein_complex}.json"
  output:
    "results/data/{protein_complex}/input.json"
  shell:
    """
    cp {input} {output}
    """

rule setup_combfold:
  output:
    touch("results/checkpoints/setup_combfold")
  shell:
    """
    echo "setting up combfold"
    cd workflow/scripts/dependencies/CombFold
    echo "We are in CombFold:"
    ls
    unset PIXI_PROJECT_MANIFEST
    pixi run make
    echo "compilation seems to have been a success!"
    ./CombinatorialAssembler/AF2trans.out --help
    """

## produce_fasta:               Convert the json's to fasta inputs.
rule produce_fasta:
  input:
    "results/data/{protein_complex}/{protein_complex}.json"
  output:
    directory("results/data/{protein_complex}/data/")
  shell:
    """
    cd workflow/scripts/dependencies/CombFold
    unset PIXI_PROJECT_MANIFEST
    pixi run python3 scripts/prepare_fastas.py ../../../../{input} \
      --stage pairs --output-fasta-folder ../../../../{output} \
      --max-af-size 1800
    """

rule predict_colabfold:
  input:
    "results/data/{protein_complex}/subunits/fasta"
  output:
    directory("results/data/{protein_complex}/subunits/pdb/")


## combfold:                    Calculate the complexes from the JSON
##                              file.
rule combfold:
  input:
    "results/checkpoints/setup_combfold",
    json="results/data/{protein_complex}/{protein_complex}.json",
    pdb="results/data/{protein_complex}/subunits/pdb"
  output:
    directory("results/data/{protein_complex}/subunits/combfold")
  shell:
    """
    cd workflow/scripts/dependencies/CombFold
    unset PIXI_PROJECT_MANIFEST
    pixi run python3 scripts/run_on_pdbs.py ../../../../{input.json}  \
      ../../../../{input.pdb} output-{wildcards.protein_complex}
    echo "made the following files in output"
    mkdir ../../../../{output} -p
    mv output-{wildcards.protein_complex}/* ../../../../{output}
    """

## help:                      Show the help.
rule help:
    input: "workflow/Snakefile"
    shell:
        "sed -n 's/^##//p' {input}"

## clean:                     Clean all outputs
rule clean:
    shell:
        "rm -rf results/*"

## build_overview:            Print the graph.
rule build_overview:
  output:
    "results/method.{fileformat}"
  shell:
    """
    snakemake -c 1 --forceall --dag | dot -T{wildcards.fileformat} > {output}
    """
